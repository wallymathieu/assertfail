---
layout: post
title:  "jquery"
date: 2009-04-09T00:17:00+02:00
tags: JavaScript jquery
---

I've come to admire the simplicity and style of jquery. There are some cons to it's approach of using context (as can be seen as this in the for instance "each"):

```js
jQuery("#table tr").each(function(){
    jQuery(this).DoStuffPlugin();
});
```

This wreaks havoc with some object oriented programming techniques that uses `this` for the object reference:

```js
function ClassSmurf(){
    this.name = "smurfette";
    this.SmurfAround = function(){ alert("Smurf: "+this.name); }
};
```

This is a simple example broken by jquery's use of context (that jQuery binds this). There is a simple work around:

```js
function ClassSmurf(){
    this.name = "smurfette";
    var that = this;
    this.SmurfAround = function(){ alert("Smurf: "+that.name); }
};
```

Note that we capture the object instance as a private variable. We do get some additional boilerplate in order to have jQuery safe "classes". Don't take me wrong. I love that we have jquery.
